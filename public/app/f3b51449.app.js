!function(){"use strict";function a(a,b,c,d){b.otherwise("/"),d.interceptors.push("authInterceptor")}function b(a,b,c){a.$on("$stateChangeStart",function(a,d){c.isLoggedInAsync(function(a){d.authenticate&&!a&&b.path("/login")})})}function c(a,b,c,d){return{request:function(a){return a.headers=a.headers||{},c.get("token")&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status?(d.path("/login"),c.remove("token"),b.reject(a)):b.reject(a)}}}angular.module("aaaaaaApp",["ngCookies","ngResource","ngSanitize","btford.socket-io","ui.router","ui.bootstrap"]).config(a).factory("authInterceptor",c).run(b),a.$inject=["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider"],b.$inject=["$rootScope","$location","Auth"],c.$inject=["$rootScope","$q","$cookieStore","$location"]}(),function(){"use strict";function a(a){a.state("login",{url:"/login",templateUrl:"app/account/login/login.html",controller:"LoginCtrl"}).state("signup",{url:"/signup",templateUrl:"app/account/signup/signup.html",controller:"SignupCtrl"}).state("settings",{url:"/settings",templateUrl:"app/account/settings/settings.html",controller:"SettingsCtrl",authenticate:!0})}angular.module("aaaaaaApp").config(a),a.$inject=["$stateProvider"]}(),function(){"use strict";function a(a,b,c,d){function e(d){a.submitted=!0,d.$valid&&b.login({email:a.user.email,password:a.user.password}).then(function(){c.path("/")})["catch"](function(b){a.errors.other=b.message})}function f(a){d.location.href="/auth/"+a}a.user={},a.errors={},a.login=e,a.loginOauth=f}angular.module("aaaaaaApp").controller("LoginCtrl",a),a.$inject=["$scope","Auth","$location","$window"]}(),function(){"use strict";function a(a,b,c){function d(b){a.submitted=!0,b.$valid&&c.changePassword(a.user.oldPassword,a.user.newPassword).then(function(){a.message="Password successfully changed."})["catch"](function(){b.password.$setValidity("mongoose",!1),a.errors.other="Incorrect password",a.message=""})}a.errors={},a.changePassword=d}angular.module("aaaaaaApp").controller("SettingsCtrl",a),a.$inject=["$scope","User","Auth"]}(),function(){"use strict";function a(a,b,c,d){function e(d){a.submitted=!0,d.$valid&&b.createUser({name:a.user.name,email:a.user.email,password:a.user.password}).then(function(){c.path("/")})["catch"](function(b){b=b.data,a.errors={},angular.forEach(b.errors,function(b,c){d[c].$setValidity("mongoose",!1),a.errors[c]=b.message})})}function f(a){d.location.href="/auth/"+a}a.user={},a.errors={},a.register=e,a.loginOauth=f}angular.module("aaaaaaApp").controller("SignupCtrl",a),a.$inject=["$scope","Auth","$location","$window"]}(),function(){"use strict";function a(a,b,c,d){a.users=d.query(),a["delete"]=function(b){d.remove({id:b._id}),angular.forEach(a.users,function(c,d){c===b&&a.users.splice(d,1)})}}angular.module("aaaaaaApp").controller("AdminCtrl",a),a.$inject=["$scope","$http","Auth","User"]}(),function(){"use strict";function a(a){a.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminCtrl"})}angular.module("aaaaaaApp").config(a),a.$inject=["$stateProvider"]}(),function(){"use strict";function a(a,b,c,d){function e(){a.awesomeThings=[],d.getThings().success(function(b){a.awesomeThings=b,c.syncUpdates("thing",a.awesomeThings)})}function f(){""!==a.newThing&&(d.addThing({name:a.newThing}),a.newThing="")}function g(a){d.deleteThing(a._id)}e(),a.addThing=f,a.deleteThing=g,a.$on("$destroy",function(){c.unsyncUpdates("thing")})}angular.module("aaaaaaApp").controller("MainCtrl",a),a.$inject=["$scope","$http","socket","MainSvc"]}(),function(){"use strict";function a(a){a.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl"})}angular.module("aaaaaaApp").config(a),a.$inject=["$stateProvider"]}(),function(){"use strict";function a(a){function b(){return a.get("/api/things")}function c(b){return a.post("/api/things",b)}function d(b){return a["delete"]("/api/things/"+b)}this.getThings=b,this.addThing=c,this.deleteThing=d}angular.module("aaaaaaApp").service("MainSvc",a),a.$inject=["$http"]}(),function(){"use strict";function a(a,b,c,d,e,f){function g(a,b){var g=b||angular.noop,h=f.defer();return c.post("/auth/local",{email:a.email,password:a.password}).success(function(a){return e.put("token",a.token),p=d.get(),h.resolve(a),g()}).error(function(a){return this.logout(),h.reject(a),g(a)}.bind(this)),h.promise}function h(){e.remove("token"),p={}}function i(a,b){var c=b||angular.noop;return d.save(a,function(b){return e.put("token",b.token),p=d.get(),c(a)},function(a){return this.logout(),c(a)}.bind(this)).$promise}function j(a,b,c){var e=c||angular.noop;return d.changePassword({id:p._id},{oldPassword:a,newPassword:b},function(a){return e(a)},function(a){return e(a)}).$promise}function k(){return p}function l(){return p.hasOwnProperty("role")}function m(a){p.hasOwnProperty("$promise")?p.$promise.then(function(){a(!0)})["catch"](function(){a(!1)}):a(p.hasOwnProperty("role")?!0:!1)}function n(){return"admin"===p.role}function o(){return e.get("token")}var p={};return e.get("token")&&(p=d.get()),{login:g,logout:h,createUser:i,changePassword:j,getCurrentUser:k,isLoggedIn:l,isLoggedInAsync:m,isAdmin:n,getToken:o}}angular.module("aaaaaaApp").factory("Auth",a),a.$inject=["$location","$rootScope","$http","User","$cookieStore","$q"]}(),function(){"use strict";function a(a){return a("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}angular.module("aaaaaaApp").factory("User",a),a.$inject=["$resource"]}(),function(){"use strict";function a(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}}angular.module("aaaaaaApp").directive("mongooseError",a)}(),function(){"use strict";function a(a,b,c){a.menu=[{title:"Home",link:"/"}],a.isCollapsed=!0,a.isLoggedIn=c.isLoggedIn,a.isAdmin=c.isAdmin,a.getCurrentUser=c.getCurrentUser,a.logout=function(){c.logout(),b.path("/login")},a.isActive=function(a){return a===b.path()}}angular.module("aaaaaaApp").controller("NavbarCtrl",a),a.$inject=["$scope","$location","Auth"]}(),function(){"use strict";function a(a){function b(a,b,c){c=c||angular.noop,e.on(a+":save",function(a){var d=_.find(b,{_id:a._id}),e=b.indexOf(d),f="created";d?(b.splice(e,1,a),f="updated"):b.push(a),c(f,a,b)}),e.on(a+":remove",function(a){var d="deleted";_.remove(b,{_id:a._id}),c(d,a,b)})}function c(a){e.removeAllListeners(a+":save"),e.removeAllListeners(a+":remove")}var d=io(null,{}),e=a({ioSocket:d});return{socket:e,syncUpdates:b,unsyncUpdates:c}}angular.module("aaaaaaApp").factory("socket",a),a.$inject=["socketFactory"]}(),angular.module("aaaaaaApp").run(["$templateCache",function(a){"use strict";a.put("app/account/login/login.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Login</h1><p>Accounts are reset on server restart from <code>server/config/seed.js</code>. Default account is <code>test@test.com</code> / <code>test</code></p><p>Admin account is <code>admin@admin.com</code> / <code>admin</code></p></div><div class=col-sm-12><form class=form name=form ng-submit=login(form) novalidate><div class=form-group><label>Email</label><input type=email name=email class=form-control ng-model=user.email required></div><div class=form-group><label>Password</label><input type=password name=password class=form-control ng-model=user.password required></div><div class="form-group has-error"><p class=help-block ng-show="form.email.$error.required && form.password.$error.required && submitted">Please enter your email and password.</p><p class=help-block ng-show="form.email.$error.email && submitted">Please enter a valid email.</p><p class=help-block>{{ errors.other }}</p></div><div><button class="btn btn-inverse btn-lg btn-login" type=submit>Login</button> <a class="btn btn-default btn-lg btn-register" href=/signup>Register</a></div><hr><div><a class="btn btn-facebook" href="" ng-click="loginOauth(\'facebook\')"><i class="fa fa-facebook"></i> Connect with Facebook</a> <a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')"><i class="fa fa-google-plus"></i> Connect with Google+</a> <a class="btn btn-twitter" href="" ng-click="loginOauth(\'twitter\')"><i class="fa fa-twitter"></i> Connect with Twitter</a></div></form></div></div><hr></div>'),a.put("app/account/settings/settings.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Change Password</h1></div><div class=col-sm-12><form class=form name=form ng-submit=changePassword(form) novalidate><div class=form-group><label>Current Password</label><input type=password name=password class=form-control ng-model=user.oldPassword mongoose-error><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.other }}</p></div><div class=form-group><label>New Password</label><input type=password name=newPassword class=form-control ng-model=user.newPassword ng-minlength=3 required><p class=help-block ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) && (form.newPassword.$dirty || submitted)">Password must be at least 3 characters.</p></div><p class=help-block>{{ message }}</p><button class="btn btn-lg btn-primary" type=submit>Save changes</button></form></div></div></div>'),a.put("app/account/signup/signup.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Sign up</h1></div><div class=col-sm-12><form class=form name=form ng-submit=register(form) novalidate><div class=form-group ng-class="{ \'has-success\': form.name.$valid && submitted,\n                                            \'has-error\': form.name.$invalid && submitted }"><label>Name</label><input name=name class=form-control ng-model=user.name required><p class=help-block ng-show="form.name.$error.required && submitted">A name is required</p></div><div class=form-group ng-class="{ \'has-success\': form.email.$valid && submitted,\n                                            \'has-error\': form.email.$invalid && submitted }"><label>Email</label><input type=email name=email class=form-control ng-model=user.email required mongoose-error><p class=help-block ng-show="form.email.$error.email && submitted">Doesn\'t look like a valid email.</p><p class=help-block ng-show="form.email.$error.required && submitted">What\'s your email address?</p><p class=help-block ng-show=form.email.$error.mongoose>{{ errors.email }}</p></div><div class=form-group ng-class="{ \'has-success\': form.password.$valid && submitted,\n                                            \'has-error\': form.password.$invalid && submitted }"><label>Password</label><input type=password name=password class=form-control ng-model=user.password ng-minlength=3 required mongoose-error><p class=help-block ng-show="(form.password.$error.minlength || form.password.$error.required) && submitted">Password must be at least 3 characters.</p><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.password }}</p></div><div><button class="btn btn-inverse btn-lg btn-login" type=submit>Sign up</button> <a class="btn btn-default btn-lg btn-register" href=/login>Login</a></div><hr><div><a class="btn btn-facebook" href="" ng-click="loginOauth(\'facebook\')"><i class="fa fa-facebook"></i> Connect with Facebook</a> <a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')"><i class="fa fa-google-plus"></i> Connect with Google+</a> <a class="btn btn-twitter" href="" ng-click="loginOauth(\'twitter\')"><i class="fa fa-twitter"></i> Connect with Twitter</a></div></form></div></div><hr></div>'),a.put("app/admin/admin.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class=list-group><li class=list-group-item ng-repeat="user in users"><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span> <a ng-click=delete(user) class=trash><span class="glyphicon glyphicon-trash pull-right"></span></a></li></ul></div>'),a.put("app/main/main.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><header class=hero-unit id=banner><div class=container><h1>\'Allo, \'Allo!</h1><p class=lead>Kick-start your next web app with Angular Fullstack</p><img src=assets/images/edc5e504.yeoman.png alt="I\'m Yeoman"></div></header><div class=container><div class=row><div class=col-lg-12><h1 class=page-header>Features:</h1><ul class="nav nav-tabs nav-stacked col-md-4 col-lg-4 col-sm-6" ng-repeat="thing in awesomeThings"><li><a href=# tooltip={{thing.info}}>{{thing.name}}<button type=button class=close ng-click=deleteThing(thing)>&times;</button></a></li></ul></div></div><form class=thing-form><label>Syncs in realtime across clients</label><p class=input-group><input class=form-control placeholder="Add a new thing here." ng-model=newThing> <span class=input-group-btn><button type=submit class="btn btn-primary" ng-click=addThing()>Add New</button></span></p></form></div>'),a.put("components/navbar/navbar.html",'<div class="navbar navbar-default navbar-static-top" ng-controller=NavbarCtrl><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click="isCollapsed = !isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href="/" class=navbar-brand>aaaaaa</a></div><div collapse=isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li ng-repeat="item in menu" ng-class="{active: isActive(item.link)}"><a ng-href={{item.link}}>{{item.title}}</a></li><li ng-show=isAdmin() ng-class="{active: isActive(\'/admin\')}"><a ui-sref=admin>Admin</a></li></ul><ul class="nav navbar-nav navbar-right"><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/signup\')}"><a ui-sref=signup>Sign up</a></li><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/login\')}"><a ui-sref=login>Login</a></li><li ng-show=isLoggedIn()><p class=navbar-text>Hello {{ getCurrentUser().name }}</p></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/settings\')}"><a ui-sref=settings><span class="glyphicon glyphicon-cog"></span></a></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/logout\')}"><a href="" ng-click=logout()>Logout</a></li></ul></div></div></div>')}]);